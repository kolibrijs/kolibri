html.dark:root {
  color-scheme: dark;
}

html.dark .shiki-light {
  display: none;
}

html:not(.dark) .shiki-dark {
  display: none;
}

.enigmaslidev-code-wrapper {
  margin: var(--enigmaslidev-code-margin) !important;
  scroll-padding: var(--enigmaslidev-code-padding);
  &:-webkit-scrollbar {
    width: 0px;
  }
}

.enigmaslidev-code {
  font-family: var(--enigmaslidev-code-font-family) !important;
  padding: var(--enigmaslidev-code-padding) !important;
  font-size: var(--enigmaslidev-code-font-size) !important;
  line-height: var(--enigmaslidev-code-line-height) !important;
  border-radius: var(--enigmaslidev-code-radius) !important;
  overflow: auto;
}

.enigmaslidev-code .line.highlighted {
}
.enigmaslidev-code .line.dishonored {
  opacity: 0.3;
}

.shiki-container {
  @apply relative flex flex-col;
}

.shiki-container > .shiki {
  @apply h-full;
}

.enigmaslidev-code-line-numbers .enigmaslidev-code code {
  counter-reset: step;
  counter-increment: step calc(var(--start, 1) - 1);
}

.enigmaslidev-code-line-numbers .enigmaslidev-code code .line::before {
  content: counter(step);
  counter-increment: step;
  @apply w-4 mr-6 inline-block text-right text-gray-400 dark:text-gray-600;
}

/* revert windicss preflight for katex */
.katex,
.katex :after,
.katex :before {
  border-color: currentColor;
}

/* codemirror */
.CodeMirror pre.CodeMirror-placeholder { opacity: 0.4; }
